@model ViewBlogViewModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager
@{
    ViewData["Title"] = Model.Blog.Title;
    var user = await UserManager.GetUserAsync(User);
}

<div class="container" style="height: calc(100vh - 150px); overflow-y: auto;">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card" style="background-color: #f8f9fa; color: #333;">
                @if (!string.IsNullOrEmpty(Model.Blog.ProfilePicture))
                {
                    <img src="@Model.Blog.ProfilePicture" class="card-img-top img-fluid" style="max-height: 300px; object-fit: cover;" alt="Blog Image">
                }
                <div class="card-body">
                    <h1 class="card-title">@Model.Blog.Title</h1>
                    <p class="card-text" style="white-space: pre-wrap;">@Model.Blog.Description</p>
                    <div class="d-flex justify-content-between mt-4">
                        @if (Model.Blog.Author?.Id == user?.Id) {
                            <button class="btn btn-primary" onclick="window.location.href='@Url.Action("EditBlog", "Blog", new { blogId = Model.Blog.Id })'">Edit blog</button>
                        }
                        <button class="btn btn-primary" onclick="window.location.href='@Url.Action("Comment", "Blog", new { id = Model.Blog.Id })'">Comment</button>
                        <button class="btn btn-secondary">Like</button>
                        <button class="btn btn-secondary">Share</button>
                    </div>
                </div>
                <div class="card-footer">
                    <p class="text-muted">
                        Author: 
                        <a href="@Url.Action("PublicProfile", "Account", new { userId = Model.Blog.Author.Id })">
                            @Model.Blog.Author?.UserName
                        </a>
                    </p>
                    <p class="text-muted">Posts: @Model.Blog.Posts?.Count ?? 0</p>
                </div>
                @if (Model.Blog.Author?.Id == user?.Id) {
                    <div class="card-footer">
                        <form asp-action="MakePost" asp-controller="Blog" method="post" enctype="multipart/form-data">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>


                            <div class="form-group">
                                <label for="title">Title</label>
                                <input class="form-control" id="title" required asp-for="MakePostViewModel.Title" style="background-color: #D3D3D3; color: black;"/>
                                <span asp-validation-for="MakePostViewModel.Title" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label for="content">Content</label>
                                <textarea class="form-control" id="content" rows="5" required asp-for="MakePostViewModel.Content" style="background-color: #D3D3D3; color: black;"></textarea>
                                <span asp-validation-for="MakePostViewModel.Content" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label for="image">Optional image</label>
                                <input type="file" class="form-control-file" id="image" asp-for="MakePostViewModel.Image" />
                                <span asp-validation-for="MakePostViewModel.Image" class="text-danger"></span>
                            </div>

                            <input type="hidden" asp-for="MakePostViewModel.blogId" value="@Model.Blog.Id"/>

                            <button type="submit" class="btn btn-primary">Post</button>
                        </form>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
